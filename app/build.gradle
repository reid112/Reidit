apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    flavorDimensions "default"

    defaultConfig {
        applicationId "ca.rjreid.reidit"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary= true
        multiDexEnabled true
    }

    buildTypes {
        debug {
            minifyEnabled false
            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker
            useProguard false
        }

        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    productFlavors {
        Store {
            dimension "default"
            applicationId "ca.rjreid.reidit"
            resValue "string", "app_name", "ReidIt"
        }

        Test {
            dimension "default"
            applicationId "ca.rjreid.reidit.test"
            resValue "string", "app_name", "ReidIt Test"
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}

kapt {
    generateStubs = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Android
    implementation "com.android.support:support-compat:$supportLibraryVersion"
    implementation "com.android.support:support-core-ui:$supportLibraryVersion"
    implementation "com.android.support:support-annotations:$supportLibraryVersion"
    implementation "com.android.support:support-fragment:$supportLibraryVersion"
    implementation "com.android.support:support-media-compat:$supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$supportLibraryVersion"
    implementation "com.android.support:multidex:$multidexVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    // Mockito (http://site.mockito.org/)
    testImplementation "org.mockito:mockito-core:$mockitoVersion"

    // JUnit (http://junit.org/junit4/)
    testImplementation "junit:junit:$junitVersion"

    // Robolectric (http://robolectric.org/)
    testImplementation "org.robolectric:robolectric:$roboelectricVersion"

    // RxJava/RxAndroid (https://github.com/ReactiveX/RxAndroid)
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$rxJavaVersion"

    // RxBindings (https://github.com/JakeWharton/RxBinding)
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxBindingsVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxBindingsVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:$rxBindingsVersion"
    compile "com.jakewharton.rxbinding2:rxbinding-design-kotlin:$rxBindingsVersion"

    // Retrofit (https://github.com/square/retrofit)
    implementation ("com.squareup.retrofit2:retrofit:$retrofitVersion") {
        // exclude Retrofitâ€™s OkHttp peer-dependency module and define your own module import
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    // OK HTTP (https://github.com/square/okhttp)
    implementation "com.squareup.okhttp3:okhttp:$okhtttpVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpMockWebserverVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"

    // Picasso (https://github.com/square/picasso)
    implementation "com.squareup.picasso:picasso:$picassoVersion"

    // Event Bus (https://github.com/greenrobot/EventBus)
    implementation "org.greenrobot:eventbus:$eventBusVersion"
    kapt "org.greenrobot:eventbus-annotation-processor:$eventBusAnnotationProcessorVersion"

    // GSON (https://github.com/google/gson)
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Evernote Android State (https://github.com/evernote/android-state)
    // Want to remove this eventually and just use view models
    implementation "com.evernote:android-state:$evernoteVersion"
    kapt "com.evernote:android-state-processor:$evernoteVersion"

    // Timber (https://github.com/JakeWharton/timber)
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Dagger dependencies
    kapt  "com.google.dagger:dagger-compiler:$daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    // This needs to be commented out to use Contributer
    // kapt  "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Contributer (https://github.com/IVIanuu/Contributer)
    // This allows us to user dagger to inject into view/controllers/custom types
    implementation "com.github.IVIanuu.Contributer:contributer-view:$contributerVersion"
    implementation "com.github.IVIanuu.Contributer:contributer-conductor:$contributerVersion"
    implementation "com.github.IVIanuu.Contributer:contributer-annotations:$contributerVersion"
    kapt "com.github.IVIanuu.Contributer:contributer-processor:$contributerVersion"

}